<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">
     <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
       .container {
        margin-top: 110px;
    }

    .profile-image {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        border: 3px solid rgba(255, 255, 255, 0.3);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
        object-fit: cover;
        margin-bottom: 12px;
      }

    .stat-box1 {
        background-color: #17a2b8;
        color: white;
        padding: 30px;
        margin: 10px;
        border-radius: 10px;
    } 
    .stat-box2 {
        background-color: #20b2aa;
        color: white;
        padding: 30px;
        margin: 10px;
        border-radius: 10px;
    } 
    .stat-box3 {
        background-color: #5be5dd;
        color: white;
        padding: 30px;
        margin: 10px;
        border-radius: 10px;
    } 

    .addStaff {
    border: 1px solid #17a2b8;
    border-radius: 20px;
    width: 300px;
    height: 50px;
    background-color: #ffffffb9;
    color: #17a2b8;
    font-weight: bold;
    transition: background 0.2s, color 0.2s;
}

.addStaff:hover {
    background-color: #17a2b8;
    color: #fff;
}
    </style>
</head>
<body>
    <%- include('../partials/navbar.ejs') %>

    <div class="content-container" id="content">
        <div class="container text-center">
            <div class="row justify-content-center">
                <div class="col-md-3 stat-box1">
                    <b>No. of Employees</b>
                    <h2><%= staffCount %></h2>
                </div>
                <div class="col-md-3 stat-box2">
                    <b>No. of Rewards</b>
                    <h2><%= rewardCount %></h2>
                </div>
                <div class="col-md-3 stat-box3">
                    <b>No. of Active Programs</b>
                    <h2><%= programCount %></h2>
                </div>
            </div>
        </div>

        <!-- Add this section for the charts -->
<div class="container mt-5">
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Most Popular Programs</h5>
                    <canvas id="popular_program" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Most Redeemed Rewards</h5>
                    <canvas id="popular_reward" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Most Active Departments (This Month)</h5>
                    <canvas id="active_department" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Participant Trends by Month</h5>
                    <canvas id="participant_trends" height="120"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>
        // --- Program Chart ---
        const programLabels = <%- JSON.stringify(programLabels) %>;
        const programData = <%- JSON.stringify(programData) %>;
        const ctxProgram = document.getElementById("popular_program").getContext('2d');
        const programMax = Math.max(...programData);
        const programBarColors = programData.map(val =>
            val === programMax ? 'rgba(255, 193, 7, 0.85)' : 'rgba(54, 162, 235, 0.7)'
        );
        new Chart(ctxProgram, {
            type: 'bar',
            data: {
                labels: programLabels,
                datasets: [{
                    label: 'Average Rating',
                    data: programData,
                    backgroundColor: programBarColors
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    x: {
                        barPercentage: 0.8,
                        categoryPercentage: 0.8
                    },
                    y: {
                        beginAtZero: true,
                        min: 0,
                        max: 5,
                        title: {
                            display: true,
                            text: 'Average Rating'
                        },
                        ticks: {
                            stepSize: 0.50
                        }
                    }

                }
            }
        });

        // --- Reward Chart ---
        const rewardLabels = <%- JSON.stringify(rewardLabels) %>;
        const rewardData = <%- JSON.stringify(rewardData) %>;
        const ctxReward = document.getElementById("popular_reward").getContext('2d');
        const rewardMax = Math.max(...rewardData);
        const rewardBarColors = rewardData.map(val =>
            val === rewardMax ? 'rgba(40, 167, 69, 0.85)' : 'rgba(255, 99, 132, 0.7)'
        );
        new Chart(ctxReward, {
            type: 'bar',
            data: {
                labels: rewardLabels,
                datasets: [{
                    label: 'Rewards',
                    data: rewardData,
                    backgroundColor: rewardBarColors
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    x: {
                        barPercentage: 0.8,
                        categoryPercentage: 0.8
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                            callback: function(value) {
                                if (Number.isInteger(value)) return value;
                            }
                        }
                    }
                }
            }
        });

        // --- Active Department Chart ---
        const activeLabel = <%- JSON.stringify(activeLabel) %>;
        const activeData = <%- JSON.stringify(activeData) %>;
        const ctxDept = document.getElementById("active_department").getContext('2d');
        const deptMax = Math.max(...activeData);
        const deptBarColors = activeData.map(val =>
            val === deptMax ? 'rgba(255, 87, 34, 0.85)' : 'rgba(153, 102, 255, 0.7)'
        );
        new Chart(ctxDept, {
            type: 'bar',
            data: {
                labels: activeLabel,
                datasets: [{
                    label: 'Departments',
                    data: activeData,
                    backgroundColor: deptBarColors
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    x: {
                        barPercentage: 0.8,
                        categoryPercentage: 0.8
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                            callback: function(value) {
                                if (Number.isInteger(value)) return value;
                            }
                        }
                    }
                }
            }
        });

        // --- Participant Trends Line Chart ---
        const monthLabels = <%- JSON.stringify(monthLabels) %>;
        const monthData = <%- JSON.stringify(monthData) %>;
        const ctxTrends = document.getElementById("participant_trends").getContext('2d');
        new Chart(ctxTrends, {
            type: 'line',
            data: {
                labels: monthLabels,
                datasets: [{
                    label: 'Participants',
                    data: monthData,
                    fill: true,
                    borderColor: 'rgba(54, 162, 235, 1)',
                    backgroundColor: 'rgba(54, 162, 235, 0.15)',
                    tension: 0.3,
                    pointBackgroundColor: 'rgba(54, 162, 235, 1)',
                    pointRadius: 4
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    x: { title: { display: true, text: 'Month' } },
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Participants' },
                        ticks: {
                            stepSize: 1,
                            callback: function(value) {
                                if (Number.isInteger(value)) return value;
                            }
                        }
                    }
                }
            }
        });
    </script>

    <div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">Staff Details</h5>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>Staff ID</th>
                                    <th>Profile Pic</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Gender</th>
                                    <th>Role</th>
                                    <th>Department</th>
                                    <th>Date Joined</th>
                                    <th>Status</th>
                                    <th>Total Points</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% person.forEach(staff => { %>
                                    <tr>
                                        <td><%= staff.staffID %></td>
                                        <td>
                                            <img class="profile-image" src="/images/<%= staff.profile_image %>">
                                        </td>
                                        <td><b><%= staff.first_name %></b> <%= staff.last_name %></td>
                                        <td><%= staff.email %></td>
                                        <td><%= staff.gender %></td>
                                        <td><%= staff.role %></td>
                                        <td><%= staff.department_name %></td>
                                        <td><%= staff.date_join ? staff.date_join.toISOString().slice(0,10) : '' %></td>
                                        <td>
                                            <form action="/status/<%= staff.staffID %>" method="POST" class="d-inline">
                                                <select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
                                                    <option value="Active" <%= staff.status === 'Active' ? 'selected' : '' %>>Active</option>
                                                    <option value="Deactive" <%= staff.status === 'Deactive' ? 'selected' : '' %>>Deactive</option>
                                                </select>
                                            </form>
                                        </td>
                                        <td><%= staff.total_point %></td>
                                        <td>
                                        <button class="btn btn-sm btn-primary" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editModal"
                                                data-staff='<%- JSON.stringify(staff) %>'>
                                            Edit
                                        </button>
                                        </td>
                                    </tr>
                                <% }) %>
                                
                            </tbody>
                        </table>
                        <div class="d-flex justify-content-center mt-3">
                            <a href="/admin/register">
                                <button class="addStaff">Add Staff</button>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form id="editStaffForm" method="POST" enctype="multipart/form-data" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editModalLabel">Edit Staff</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="staffID" id="edit_staffID">
        <input type="hidden" name="old_profile_image" id="edit_old_profile_image">

        <div class="mb-2 text-center">
          <img id="edit_profile_preview" src="" class="profile-image mb-2" style="width:80px;height:80px;">
        </div>
        <div class="mb-2">
          <label for="edit_profile_image">Profile Image</label>
          <input type="file" class="form-control" name="profile_image" id="edit_profile_image" accept="image/*">
        </div>
        <div class="mb-2">
          <label for="edit_first_name">First Name *</label>
          <input type="text" class="form-control" name="first_name" id="edit_first_name" required>
        </div>
        <div class="mb-2">
          <label for="edit_last_name">Last Name *</label>
          <input type="text" class="form-control" name="last_name" id="edit_last_name" required>
        </div>
        <div class="mb-2">
          <label for="edit_role">Role *</label>
          <select class="form-control" name="role" id="edit_role" required>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
        </div>
        <div class="mb-2">
          <label for="edit_department_name">Department *</label>
          <input type="text" class="form-control" name="department_name" id="edit_department_name" required>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </form>
  </div>
</div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js" integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO" crossorigin="anonymous"></script>
    <script>
document.addEventListener('DOMContentLoaded', function () {
  var editModal = document.getElementById('editModal');
  editModal.addEventListener('show.bs.modal', function (event) {
    var button = event.relatedTarget;
    var staff = JSON.parse(button.getAttribute('data-staff'));

    // Set form action dynamically
    document.getElementById('editStaffForm').action = '/editStaff/' + staff.staffID;

    document.getElementById('edit_staffID').value = staff.staffID;
    document.getElementById('edit_old_profile_image').value = staff.profile_image;
    document.getElementById('edit_profile_preview').src = '/images/' + staff.profile_image;
    document.getElementById('edit_first_name').value = staff.first_name;
    document.getElementById('edit_last_name').value = staff.last_name;
    document.getElementById('edit_role').value = staff.role.toLowerCase();
    document.getElementById('edit_department_name').value = staff.department_name;
  });
});
</script>
</body>
</html>