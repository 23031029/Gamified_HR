<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Chat</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" />
  <style>
    .chat-container {
      max-width: 900px;
      margin: 40px auto;
      background: white;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 5px 25px rgba(0,0,0,0.1);
    }

    .chat-header {
      font-size: 1.5rem;
      font-weight: bold;
      margin-bottom: 20px;
    }

    #chatBox {
      height: 300px;
      overflow-y: auto;
      border: 1px solid #ddd;
      border-radius: 10px;
      padding: 15px;
      background-color: #f9f9f9;
      margin-bottom: 15px;
      font-size: 0.95rem;
    }

    #chatBox div {
      margin-bottom: 10px;
    }

    .chat-form {
      display: flex;
      gap: 10px;
    }

    .chat-form input {
      flex: 1;
    }

    #receiverSelect {
      margin-bottom: 20px;
    }

    .sender {
      font-weight: bold;
      color: #4a4a4a;
    }

    .message {
      margin-left: 10px;
    }

    .unread-badge {
        color: white;
        background: red;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.75rem;
        margin-left: 6px;
        vertical-align: middle;
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar.ejs') %>

  <div class="container chat-container">
    <div class="chat-header">ðŸ’¬ Direct Message</div>

    <select id="receiverSelect" class="form-select">
      <% staffList.forEach(user => { %>
        <option value="<%= user.staffID %>" data-userid="<%= user.staffID %>">
          <%= user.name %>
        </option>
      <% }) %>
    </select>

    <div id="chatBox"></div>

    <form id="sendForm" class="chat-form">
      <input type="text" id="messageInput" class="form-control" placeholder="Type your message..." required />
      <button type="submit" class="btn btn-success">Send</button>
    </form>
  </div>

  <script>
    const receiverSelect = document.getElementById('receiverSelect');
    const chatBox = document.getElementById('chatBox');
    const messageInput = document.getElementById('messageInput');

    function loadMessages() {
      const to = receiverSelect.value;
      fetch(`/chat/${to}`)
        .then(res => res.json())
        .then(messages => {
          chatBox.innerHTML = messages.map(m =>
            `<div><span class="sender">${m.senderID}</span>: <span class="message">${m.content}</span></div>`
          ).join('');
          chatBox.scrollTop = chatBox.scrollHeight;
        });
    }

    function updateUnreadCounts() {
      fetch('/chat/unread-counts')
        .then(res => res.json())
        .then(counts => {
            Array.from(receiverSelect.options).forEach(option => {
            const userId = option.value;
            const name = option.textContent.replace(/\s*\(\d+\)$/, ''); // Clean previous badge
            const count = counts[userId] || 0;

            if (count > 0) {
                option.textContent = `${name} (${count})`; // or use ðŸŸ¥ or ðŸ”´
            } else {
                option.textContent = name;
            }
            });
        });
    }

    receiverSelect.addEventListener('change', () => {
      loadMessages();
      updateUnreadCounts();
    });

    document.getElementById('sendForm').addEventListener('submit', e => {
      e.preventDefault();
      fetch('/chat/send', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
          receiverID: receiverSelect.value,
          content: messageInput.value
        })
      }).then(() => {
        messageInput.value = '';
        loadMessages();
      });
    });

    setInterval(() => {
      loadMessages();
      updateUnreadCounts();
    }, 3000);

    loadMessages();
    updateUnreadCounts();
  </script>
</body>
</html>
