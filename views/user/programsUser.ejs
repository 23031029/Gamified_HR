<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>CASUGOL - Programs</title>
  <link rel="stylesheet" type="text/css" href="/overall.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
  <style>
       .header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 3rem 0;
      text-align: center;
    }

    .header h1 {
      font-size: 2.5rem;
      font-weight: 300;
      letter-spacing: -0.5px;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem 1rem;
    }

    .programs-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 2rem;
      margin-top: 2rem;
    }

    .program-card {
      background: white;
      border-radius: 12px;
      padding: 2rem;
      box-shadow: 0 2px 20px rgba(0, 0, 0, 0.06);
      transition: all 0.3s ease;
      border: 1px solid #e2e8f0;
    }

    .program-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 40px rgba(0, 0, 0, 0.12);
    }

    .program-header {
      margin-bottom: 1.5rem;
    }

    .program-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: #1a202c;
    }

    .program-type {
      background: #e6fffa;
      color: #047857;
      padding: 0.25rem 0.75rem;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 500;
      display: inline-block;
    }

    .program-description {
      color: #4a5568;
      margin: 1rem 0;
      font-size: 0.9rem;
    }

    .points-reward {
      background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
      padding: 0.75rem;
      border-radius: 8px;
      text-align: center;
      font-weight: 500;
      margin-bottom: 1.5rem;
      color: #744210;
    }

    .timeslots-section h4 {
      font-size: 0.9rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: #2d3748;
    }

    .timeslots-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
      gap: 0.5rem;
      margin-bottom: 1rem;
    }

    .timeslot-item {
      background: #f7fafc;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      padding: 0.75rem 0.5rem;
      font-size: 0.75rem;
      text-align: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .timeslot-item:hover {
      background: #edf2f7;
      border-color: #cbd5e0;
    }

    .timeslot-item.selected {
      background: #5d6fc0;
      color: white;
      border-color: #667eea;
    }

    .selected-info {
      background: #f0fff4;
      border: 1px solid #c6f6d5;
      padding: 0.75rem;
      border-radius: 6px;
      font-size: 0.8rem;
      color: #276749;
      display: none;
      margin-bottom: 1rem;
    }

    .program-actions {
      display: flex;
      gap: 0.75rem;
      flex-wrap: wrap;
    }

    .btn {
      padding: 0.75rem 1.5rem;
      border-radius: 6px;
      font-weight: 500;
      font-size: 0.85rem;
      border: none;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s ease;
      text-align: center;
    }

    .btn-primary {
      background: #667eea;
      color: white;
    }

    .btn-primary:hover:not(:disabled) {
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }

    .btn-secondary {
      background: #f7fafc;
      color: #4a5568;
      border: 1px solid #e2e8f0;
    }

    .btn-secondary:hover:not(:disabled) {
      background: #edf2f7;
    }

    .btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .no-programs {
      text-align: center;
      font-size: 1.1rem;
      color: #718096;
      margin-top: 4rem;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: white;
      padding: 2rem;
      border-radius: 12px;
      width: 500px;
      max-width: 90%;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
      max-height: 80vh;
      overflow-y: auto;
    }

    .modal h5 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
      color: #1a202c;
    }

    .form-group {
      margin-bottom: 1rem;
    }

    .form-group label {
      display: block;
      font-size: 0.85rem;
      font-weight: 500;
      margin-bottom: 0.5rem;
      color: #4a5568;
    }

    .form-group select {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      font-size: 0.9rem;
      background: white;
    }

    .modal-actions {
      display: flex;
      gap: 0.75rem;
      justify-content: flex-end;
      margin-top: 1.5rem;
    }

    /* Checkbox styling for multiple invites */
    .form-check {
      max-height: 300px;
      overflow-y: auto;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      padding: 1rem;
    }

    .form-check > div {
      display: flex;
      align-items: center;
      padding: 0.5rem 0;
      border-bottom: 1px solid #f7fafc;
    }

    .form-check > div:last-child {
      border-bottom: none;
    }

    .form-check-input {
      margin-right: 0.5rem;
    }

    .form-check-label {
      font-size: 0.9rem;
      color: #4a5568;
      cursor: pointer;
    }

    @media (max-width: 768px) {
      .header h1 {
        font-size: 2rem;
      }
      
      .programs-grid {
        grid-template-columns: 1fr;
      }
      
      .program-actions {
        flex-direction: column;
      }
      
      .btn {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar.ejs') %>

  <div class="container">
    <% if (programs.length === 0) { %>
      <div class="no-programs">No programs available at the moment.</div>
    <% } else { %>
      <div class="programs-grid">
        <% programs.forEach(program => { %>
          <div class="program-card" id="program-<%= program.programID %>">
            <div class="program-header">
              <div class="program-title"><%= program.Title %></div>
              <div class="program-type"><%= program.Type %></div>
            </div>
            <div class="program-description"><%= program.Description %></div>
            <div class="points-reward">üèÜ <%= program.points_reward %> Points</div>

            <div class="timeslots-section">
              <% if (program.timeslots.length === 0) { %>
                <h4>No time slots available</h4>
              <% } else { %>
                <h4>Available Time Slots:</h4>
                <div class="timeslots-grid" id="timeslots-<%= program.programID %>">
                  <% program.timeslots.forEach(slot => { %>
                    <div class="timeslot-item"
                         data-program-id="<%= program.programID %>"
                         data-timeslot-id="<%= slot.timeslotID %>"
                         data-date="<%= slot.Date %>"
                         data-time="<%
                            const time = slot.Start_Time.split(':');
                            let hr = parseInt(time[0]);
                            const min = time[1];
                            const pmam = hr >= 12 ? 'PM' : 'AM';
                            hr = hr % 12 || 12;
                          %><%= hr %>:<%= min %> <%= pmam %>"
                         data-duration="<%= slot.Duration  %>"
                         data-slots="<%= slot.Slots_availablility %>">
                      <div><%= new Date(slot.Date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %></div>
                      <div><%
                            const timePart = slot.Start_Time.split(":");
                            let hours = parseInt(timePart[0]);
                            const minute = timePart[1];
                            const ampm = hours >= 12 ? "PM" : "AM";
                            hours = hours % 12 || 12;
                          %><%= hours %>:<%= minute %> <%= ampm %></div>
                      <div><%= slot.Slots_availablility %> slots</div>
                    </div>
                  <% }); %>
                </div>
                <div class="selected-info" id="selected-info-<%= program.programID %>">
                  <strong>Selected:</strong> <span id="selected-text-<%= program.programID %>"></span>
                </div>
              <% } %>
            </div>

            <div class="program-actions">
              <form action="/user/programs" method="POST" id="join-form-<%= program.programID %>">
                <input type="hidden" name="programID" value="<%= program.programID %>">
                <input type="hidden" name="timeslotID" id="selected-timeslot-<%= program.programID %>">
                <button type="submit" class="btn btn-primary" id="join-btn-<%= program.programID %>" disabled>
                  <%= program.timeslots.length > 0 ? 'Select Time Slot' : 'Program Ended' %>
                </button>
              </form>
              <% if (program.timeslots && program.timeslots.length > 0) { %>
                <button class="btn btn-secondary invite-btn" 
                        disabled 
                        id="invite-btn-<%= program.programID %>"
                        onclick="openInviteModal('<%= program.programID %>')">
                  Invite Colleagues
                </button>
              <% } else { %>
                <button class="btn btn-secondary" disabled>No Invites Available</button>
              <% } %>
            </div>
          </div>
        <% }); %>
      </div>
    <% } %>
  </div>

  <!-- Invite Modal -->
  <div id="inviteModal" class="modal">
    <div class="modal-content">
      <h5>Invite Colleagues</h5>
      <form id="inviteForm">
        <input type="hidden" name="programID" id="inviteProgramID">
        <div class="form-group">
          <label>Select Colleagues to Invite:</label>
          <div class="form-check">
            <% allStaff.forEach(user => { %>
              <% if (user.staffID !== staff.staffID) { %>
                <div>
                  <input class="form-check-input" type="checkbox" name="invitees" value="<%= user.staffID %>" id="invite-<%= user.staffID %>">
                  <label class="form-check-label" for="invite-<%= user.staffID %>">
                    <%= user.first_name %> <%= user.last_name %>
                  </label>
                </div>
              <% } %>
            <% }) %>
          </div>
        </div>
        <div class="modal-actions">
          <button type="button" class="btn btn-secondary" onclick="closeInviteModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Send Invites</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    function openInviteModal(programID) {
      const selectedTimeslot = document.querySelector(`.timeslot-item.selected[data-program-id="${programID}"]`);
      if (!selectedTimeslot) {
        alert("Please select a time slot first before inviting colleagues.");
        return;
      }

      document.getElementById('inviteModal').style.display = 'flex';
      document.getElementById('inviteProgramID').value = programID;
    }

    function closeInviteModal() {
      document.getElementById('inviteModal').style.display = 'none';
      document.querySelectorAll('input[name="invitees"]:checked').forEach(cb => cb.checked = false);
    }

    document.getElementById('inviteModal').addEventListener('click', function(e) {
      if (e.target === this) {
        closeInviteModal();
      }
    });

    document.getElementById('inviteForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const programID = document.getElementById('inviteProgramID').value;
      const checkboxes = document.querySelectorAll('input[name="invitees"]:checked');
      const inviteeIDs = Array.from(checkboxes).map(cb => cb.value);

      if (inviteeIDs.length === 0) {
        alert('Please select at least one colleague to invite.');
        return;
      }

      fetch('/invite', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ programID, inviteeIDs })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          alert(`Successfully invited ${inviteeIDs.length} colleague(s)!`);
          closeInviteModal();
        } else {
          alert("Invite failed: " + data.message);
        }
      })
      .catch(err => {
        console.error('Error:', err);
        alert('An error occurred while sending invites.');
      });
    });

    document.addEventListener('DOMContentLoaded', function () {
      const items = document.querySelectorAll('.timeslot-item');
      items.forEach(item => {
        item.addEventListener('click', function () {
          const pid = this.dataset.programId;
          const tid = this.dataset.timeslotId;
          const date = this.dataset.date;
          const time = this.dataset.time;
          const duration = this.dataset.duration;
          const slots = this.dataset.slots;

          document.querySelectorAll(`#timeslots-${pid} .timeslot-item`).forEach(el => el.classList.remove('selected'));
          this.classList.add('selected');

          document.getElementById(`selected-timeslot-${pid}`).value = tid;

          const formattedDate = new Date(date).toLocaleDateString('en-US', {
            weekday: 'short',
            year: 'numeric',
            month: 'short',
            day: 'numeric'
          });

          document.getElementById(`selected-text-${pid}`).textContent = `${formattedDate} at ${time} (${duration} mins, ${slots} slots available)`;
          document.getElementById(`selected-info-${pid}`).style.display = 'block';

          const joinBtn = document.getElementById(`join-btn-${pid}`);
          joinBtn.disabled = false;
          joinBtn.textContent = "Register Now";

          const inviteBtn = document.getElementById(`invite-btn-${pid}`);
          if (inviteBtn) {
            inviteBtn.disabled = false;
          }
        });
      });
    });
  </script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
</body>
</html>
