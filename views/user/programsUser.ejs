<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>CASUGOL - Programs</title>

  <!-- Flatpickr CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Arial', sans-serif;
      background-color: #f5f5f5;
      min-height: 100vh;
    }

    .header {
      background: linear-gradient(135deg, #B8D42F, #76B900);
      color: white;
      padding: 20px 0;
      text-align: center;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .header h1 {
      font-size: 2.5rem;
      font-weight: bold;
      letter-spacing: 2px;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 30px 20px;
    }

    .programs-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 25px;
      margin-top: 20px;
    }

    .program-card {
      background: white;
      border-radius: 15px;
      padding: 25px;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .program-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    }

    .program-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, #B8D42F, #76B900);
    }

    .program-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 15px;
    }

    .program-title {
      font-size: 1.3rem;
      font-weight: bold;
      color: #333;
      margin-bottom: 5px;
    }

    .program-type {
      background: #c8facc;
      color: #2e4a2b;
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 600;
      text-transform: capitalize;
    }

    .program-description {
      color: #666;
      margin-bottom: 20px;
      line-height: 1.5;
    }

    .points-reward {
      background: linear-gradient(135deg, #fff9c4, #ffeaa7);
      color: #333;
      padding: 10px;
      border-radius: 10px;
      text-align: center;
      font-weight: bold;
      margin-bottom: 15px;
    }

    .timeslots-section {
      margin-bottom: 20px;
    }

    .timeslots-title {
      font-size: 1rem;
      font-weight: bold;
      color: #333;
      margin-bottom: 10px;
    }

    .timeslots-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
      gap: 8px;
      margin-bottom: 15px;
    }

    .timeslot-item {
      background: #f8f9fa;
      padding: 8px;
      border-radius: 8px;
      text-align: center;
      font-size: 0.85rem;
      border: 1px solid #e9ecef;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .timeslot-item:hover {
      background: #e9ecef;
      transform: translateY(-1px);
    }

    .timeslot-item.selected {
      background: linear-gradient(135deg, #B8D42F, #76B900);
      color: white;
      border-color: #76B900;
    }

    .timeslot-date {
      font-weight: bold;
      color: #333;
      font-size: 0.8rem;
    }

    .timeslot-time {
      color: #666;
      font-size: 0.75rem;
      margin-top: 2px;
    }

    .timeslot-slots {
      color: #666;
      font-size: 0.7rem;
      margin-top: 2px;
    }

    .program-actions {
      display: flex;
      gap: 10px;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 20px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s ease;
      text-decoration: none;
      text-align: center;
      flex: 1;
    }

    .btn-primary {
      background: linear-gradient(135deg, #B8D42F, #76B900);
      color: white;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(184, 212, 47, 0.4);
    }

    .btn-secondary {
      background-color: #c9a8e8 !important;
      color: #000000;
      font-weight: 600;
      transition: all 0.3s ease;
      border: none;
    }

    .btn-secondary:hover {
      background: linear-gradient(135deg, #d9c2f0, #c9a8e8, #b89dd9);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(201, 168, 232, 0.4);
    }

    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none !important;
    }

    .no-programs {
      text-align: center;
      color: #666;
      font-size: 1.2rem;
      margin-top: 50px;
    }

    .no-timeslots {
      text-align: center;
      color: #666;
      font-size: 0.9rem;
      padding: 20px;
      background: #f8f9fa;
      border-radius: 8px;
      margin-bottom: 15px;
    }

    .selected-slot-info {
      background: #e8f5e8;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 15px;
      font-size: 0.9rem;
      color: #2e4a2b;
      display: none;
    }

    @media (max-width: 768px) {
      .programs-grid {
        grid-template-columns: 1fr;
      }
      
      .timeslots-grid {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
      }
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar.ejs') %>

  <script>
    <% if (typeof error !== 'undefined' && error) { %>
      alert("<%= typeof error === 'string' ? error.replace(/"/g, '\\"') : (error.message || 'An error occurred.') %>");
    <% } %>
    <% if (typeof messageP !== 'undefined' && messageP && messageP.length) { %>
      alert("<%= Array.isArray(messageP) ? messageP[0].replace(/"/g, '\\"') : messageP.replace(/"/g, '\\"') %>");
    <% } %>
  </script>

  <div class="container">
    <% if (programs && programs.length > 0) { %>
      <div class="programs-grid">
        <% programs.forEach(program => { %>
          <div class="program-card">
            <div class="program-header">
              <div>
                <div class="program-title"><%= program.Title %></div>
                <div class="program-type"><%= program.Type %></div>
              </div>
            </div>
            <div class="program-description"><%= program.Description %></div>
            <div class="points-reward">üèÜ <%= program.points_reward %> Points Reward</div>
            
            <div class="timeslots-section">
              <% if (program.timeslots && program.timeslots.length > 0) { %>
                <div class="timeslots-title">Available Time Slots:</div>
                <div class="timeslots-grid" id="timeslots-<%= program.ProgramID %>">
                  <% program.timeslots.forEach(slot => { %>
                    <div class="timeslot-item" 
                         data-program-id="<%= program.ProgramID %>" 
                         data-timeslot-id="<%= slot.timeslotID %>"
                         data-date="<%= slot.Date %>"
                         data-time="<%= slot.Start_Time %>"
                         data-duration="<%= slot.Duration %>"
                         data-slots="<%= slot.Slots_availablility %>">
                      <div class="timeslot-date">
                        <%= new Date(slot.Date).toLocaleDateString('en-US', { 
                          month: 'short', 
                          day: 'numeric' 
                        }) %>
                      </div>
                      <div class="timeslot-time">
                        <%= slot.Start_Time ? slot.Start_Time.substring(0,5) : '-' %>
                      </div>
                      <div class="timeslot-slots">
                        <%= slot.Slots_availablility %> slots
                      </div>
                    </div>
                  <% }); %>
                </div>
                
                <div class="selected-slot-info" id="selected-info-<%= program.ProgramID %>">
                  <strong>Selected:</strong> <span id="selected-text-<%= program.ProgramID %>"></span>
                </div>
              <% } else { %>
                <div class="no-timeslots">No time slots available for this program.</div>
              <% } %>
            </div>
            
            <div class="program-actions">
              <% if (program.timeslots && program.timeslots.length > 0) { %>
                <form action="/user/programs" method="POST" style="display:inline;" id="join-form-<%= program.ProgramID %>">
                  <input type="hidden" name="programID" value="<%= program.ProgramID %>">
                  <input type="hidden" name="timeslotID" value="" id="selected-timeslot-<%= program.ProgramID %>">
                  <button type="submit" class="btn btn-primary" id="join-btn-<%= program.ProgramID %>" disabled>
                    Select Time Slot
                  </button>
                </form>
              <% } else { %>
                <button class="btn btn-secondary" disabled>Program Ended</button>
              <% } %>
              <a href="/programs/<%= program.ProgramID %>" class="btn btn-secondary">View Details</a>
            </div>
            <!-- Invite Button -->
            <button class="btn btn-secondary" onclick="openInviteModal('<%= program.ProgramID %>')">Invite</button>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="no-programs"><p>No programs available at the moment.</p></div>
    <% } %>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Handle timeslot selection
      const timeslotItems = document.querySelectorAll('.timeslot-item');
      
      timeslotItems.forEach(item => {
        item.addEventListener('click', function() {
          const programId = this.dataset.programId;
          const timeslotId = this.dataset.timeslotId;
          const date = this.dataset.date;
          const time = this.dataset.time;
          const duration = this.dataset.duration;
          const slots = this.dataset.slots;
          
          // Remove selection from other timeslots in the same program
          document.querySelectorAll(`#timeslots-${programId} .timeslot-item`).forEach(slot => {
            slot.classList.remove('selected');
          });
          
          // Add selection to clicked timeslot
          this.classList.add('selected');
          
          // Update hidden input
          document.getElementById(`selected-timeslot-${programId}`).value = timeslotId;
          
          // Update selected info display
          const selectedInfo = document.getElementById(`selected-info-${programId}`);
          const selectedText = document.getElementById(`selected-text-${programId}`);
          const formattedDate = new Date(date).toLocaleDateString('en-US', { 
            weekday: 'short',
            year: 'numeric', 
            month: 'short', 
            day: 'numeric' 
          });
          const formattedTime = time.substring(0, 5);
          
          selectedText.textContent = `${formattedDate} at ${formattedTime} (${duration} mins, ${slots} slots available)`;
          selectedInfo.style.display = 'block';
          
          // Enable join button
          const joinBtn = document.getElementById(`join-btn-${programId}`);
          joinBtn.disabled = false;
          joinBtn.textContent = 'Register Now';
        });
      });
      
      // Handle form submission
      document.querySelectorAll('form[id^="join-form-"]').forEach(form => {
        form.addEventListener('submit', function(e) {
          const programId = this.querySelector('input[name="programID"]').value;
          const timeslotId = this.querySelector('input[name="timeslotID"]').value;
          
          if (!timeslotId) {
            e.preventDefault();
            alert('Please select a time slot first.');
            return;
          }
        });
      });
    });
  </script>
  <!-- Invite Modal -->
  <div id="inviteModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5); z-index:9999; justify-content:center; align-items:center;">
    <div style="background:white; padding:30px; border-radius:10px; width:400px; max-width:90%;">
      <h5>Invite a Colleague</h5>
      <form id="inviteForm" method="POST" action="/invite">
        <input type="hidden" name="programID" id="inviteProgramID">
        <div class="mb-3">
          <label class="form-label">Select Colleague</label>
          <select class="form-select" name="receiverID" required>
            <% coworkers.forEach(c => { %>
              <option value="<%= c.staffID %>"><%= c.first_name %> <%= c.last_name %> (<%= c.department_name %>)</option>
            <% }) %>
          </select>
        </div>
        <div class="mb-3">
          <label class="form-label">Message</label>
          <select class="form-select" name="message" required>
            <option value="Hey! Let‚Äôs attend this program together!">Hey! Let‚Äôs attend this program together!</option>
            <option value="I thought this program might interest you!">I thought this program might interest you!</option>
            <option value="Wanna join me in this program?">Wanna join me in this program?</option>
          </select>
        </div>
        <div class="d-flex justify-content-end gap-2">
          <button type="button" class="btn btn-secondary" onclick="closeInviteModal()">Cancel</button>
          <button type="submit" class="btn btn-primary">Send Invite</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    function openInviteModal(programID) {
      document.getElementById('inviteModal').style.display = 'flex';
      document.getElementById('inviteProgramID').value = programID;
    }

    function closeInviteModal() {
      document.getElementById('inviteModal').style.display = 'none';
    }
  </script>
</body>
</html>